name: DockerCompose With Gradle

on:
  push:
    branches:
      - master

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Add permission
        run: chmod +x gradlew

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

#      - name: Clean before Build
#        run: ./gradlew clean

      - name: Build and Test with Gradle
        run: ./gradlew clean build --parallel -x test
        shell: bash

      - name: Docker Build & Push
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}

      - name: Send docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "./docker-compose.yml"
          target: "/home/ubuntu"

      - name: Send .env to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "./.env"
          target: "/home/ubuntu"

      - name: SSH Connection & Deploy
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo docker-compose -f /home/ubuntu/docker-compose.yml down
            sudo docker pull ${{ secrets.DOCKER_REPO }}
            sudo docker-compose -f /home/ubuntu/docker-compose.yml up -d
            sudo docker image prune -f